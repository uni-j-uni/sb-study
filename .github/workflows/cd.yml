name: CD with Gradle
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GIT_ACTION_TOKEN }}
          submodules: true

      - name: Update submodule
        run: |
          git submodule update --remote

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission for Gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: |
          SPRING_PROFILES_ACTIVE=prod ./gradlew clean bootjar

      - name: Docker build & push
        run: |
          docker buildx build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }} --push .


  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e

            CONTAINER_NAME=sb-study

            # Pull new image
            echo "${{ secrets.DOCKER_PASSWORD }}" | sudo docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}

            # Stop and remove old container if exists
            sudo docker rm -f $CONTAINER_NAME || true

            # Run new container
            sudo docker run -d --name $CONTAINER_NAME \
                -v /home/ubuntu/your-repo/submodule-config/application-prod.yml:/app/config/application-prod.yml \
                -e SPRING_CONFIG_LOCATION=classpath:/application.yml,/app/config/application-prod.yml \
                -p 8080:${{ secrets.SPRINGBOOT_PORT }} \
                ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}

            # Remove dangling images
            sudo docker image prune -f